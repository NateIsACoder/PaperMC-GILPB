#!/bin/bash

# Nate G's Combined GLPB + AUS script
# This program gets the latest paper build info, then optionally downloads and updates your server
# Licensed under the Apache License 2.0

# CONFIG
MINECRAFT_VERSION="1.21.10"  # Change to your Minecraft version
SERVER_DIR="/home/minecraft"  # Change to your server directory
JAR_NAME="paper.jar"  # Name of your server jar file

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
PURPLE='\033[1;34m'
NC='\033[0m' # No Color

# ===== GLPB =====
echo -e "${PURPLE}=== Nate G's GLPB + AUS script v1.5 ===${NC}"

# Get latest build number
echo "Searching for PaperMC Latest Build Info..."
LATEST_BUILD=$(curl -s "https://api.papermc.io/v2/projects/paper/versions/${MINECRAFT_VERSION}" | grep -o '"builds":\[[0-9,]*\]' | grep -o '[0-9]*' | tail -1)

if [ -z "$LATEST_BUILD" ]; then
    echo -e "${RED}Error: Could not fetch latest build number. Check your Minecraft version.${NC}"
    exit 1
fi

echo -e "Latest build: ${GREEN}${LATEST_BUILD}${NC}"

# ===== PROMPT =====
echo ""
read -p "Would you like to download build ${LATEST_BUILD} and update your server to this build? (y/n): " answer

if [[ "$answer" == "y" || "$answer" == "Y" ]]; then
    # ===== AUS =====
    echo ""
   
    # Download new version
    echo -e "${YELLOW}Downloading latest Paper build for your version...${NC}"
    
    DOWNLOAD_URL="https://api.papermc.io/v2/projects/paper/versions/${MINECRAFT_VERSION}/builds/${LATEST_BUILD}/downloads/paper-${MINECRAFT_VERSION}-${LATEST_BUILD}.jar"
    
    curl -o "$SERVER_DIR/$JAR_NAME" "$DOWNLOAD_URL"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Update Complete! Updated to Paper build ${LATEST_BUILD}. Star the github repo if you enjoyed using this program!${NC}"
    else
        echo -e "${RED}Error! Download failed!${NC}"
    fi
else
    echo "Update cancelled. Exiting."
fi
