#!/bin/bash

# Nate G's AUS script. (Auto Update Server)
# This script downloads the latest PaperMC build and updates your Paper MC server. It will stop your server, but will not start it up again.
# Licensed under the Apache License 2.0

# CONFIG
MINECRAFT_VERSION="1.21.10"  # Change to your Minecraft version
SERVER_DIR="/home/minecraft"  # Change to your server directory
BACKUP_DIR="/home/minecraft/backup_File_directory"  # Where the program stores backups (leave this alone)
JAR_NAME="paper.jar"  # Name of your server jar file (you can leave this alone)
SCREEN_NAME="minecraft"  # Name of your screen session
JAVA_MEMORY_MAX="4G"  # Maximum RAM allocation (adjust as needed)
JAVA_MEMORY_MIN="2G"  # Minimum RAM allocation (adjust as needed)

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}=== Nate G's PaperMC Automatic Update Script (PMCAUS) ===${NC}"

# Get latest build number
echo "Searching for PaperMC Latest Build Info"
LATEST_BUILD=$(curl -s "https://api.papermc.io/v2/projects/paper/versions/${MINECRAFT_VERSION}" | grep -o '"builds":\[[0-9,]*\]' | grep -o '[0-9]*' | tail -1)

if [ -z "$LATEST_BUILD" ]; then
    echo -e "${RED}Error: Could not fetch latest build number. Check your Minecraft version. (Error code 2)${NC}"
    exit 1
fi

echo -e "Latest build: ${GREEN}${LATEST_BUILD}${NC}"

# Check if server is running
if screen -list | grep -q "$SCREEN_NAME"; then
    echo -e "${YELLOW}Server is running. Stopping server to apply changes.${NC}"
    
    # Send stop command to screen session
    screen -S "$SCREEN_NAME" -X stuff "stop\n"
    
    # Wait for server to stop to run further commands
    echo "Waiting for server to stop"
    sleep 15
    SERVER_WAS_RUNNING=true
else
    echo -e "${GREEN}Server is not running.${NC}"
    SERVER_WAS_RUNNING=false
fi

# Backup current jar
if [ -f "$SERVER_DIR/$JAR_NAME" ]; then
    BACKUP_NAME="paper-backup-$(date +%Y%m%d-%H%M%S).jar"
    echo "Backing up current jar to "$BACKUP_DIR/$BACKUP_NAME"
    cp "$SERVER_DIR/$JAR_NAME" "$BACKUP_DIR/$BACKUP_NAME"
fi

# Download new version
echo "${GREEN}Downloading latest Paper build for your version: ${LATEST_BUILD}${NC}"
DOWNLOAD_URL="https://api.papermc.io/v2/projects/paper/versions/${MINECRAFT_VERSION}/builds/${LATEST_BUILD}/downloads/paper-${MINECRAFT_VERSION}-${LATEST_BUILD}.jar"

curl -o "$SERVER_DIR/$JAR_NAME" "$DOWNLOAD_URL"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}Download successful!${NC}"
else
    echo -e "${RED}Error! Download failed!${NC}"
    
    # Restore backup if download failed
    if [ -f "$BACKUP_DIR/$BACKUP_NAME" ]; then
        echo "Restoring most recent backup because of failed download"
        cp "$BACKUP_DIR/$BACKUP_NAME" "$SERVER_DIR/$JAR_NAME"
    fi
    exit 1
fi

# Clean old backups (keep last 5)
echo "Cleaning old backups (Deleting all but last 5)"
cd "$BACKUP_DIR"
ls -t paper-backup-*.jar | tail -n +6 | xargs -r rm

# Restart server if it was running
if [ "$SERVER_WAS_RUNNING" = true ]; then
    echo -e "${YELLOW}Starting server${NC}"
    cd "$SERVER_DIR"
    screen -dmS "$SCREEN_NAME" java -Xmx${JAVA_MEMORY_MAX} -Xms${JAVA_MEMORY_MIN} -jar "$JAR_NAME" nogui
    echo -e "${GREEN}Server started in screen session '${SCREEN_NAME}'${NC}"
fi

echo -e "${GREEN}=== Update Complete! Star the github if you enjoyed using this program! ===${NC}"
echo "Updated to Paper build ${LATEST_BUILD}. Check out my plugin as well! Linked on my Github page."
