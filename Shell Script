!/bin/bash

# Nate G's PaperMC Auto-Update Script or PMCAUS for short
# PMCAUS downloads the latest PaperMC build and updates your Paper MC server
# PMCAUS is licensed under the Apache License 2.0

# Configuration
MINECRAFT_VERSION="1.21.1"  # Change to your Minecraft version
SERVER_DIR="/home/minecraft"  # Change to your server directory
BACKUP_DIR="/home/minecraft/backups"  # Where to store backups
JAR_NAME="paper.jar"  # Name of your server jar file

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}=== PMCAUS ===${NC}"

# Check if server directory exists
if [ ! -d "$SERVER_DIR" ]; then
    echo -e "${RED}Error: Server directory $SERVER_DIR does not exist! (Error code 1)${NC}"
    exit 1
fi

# Create backup directory if it doesn't exist
mkdir -p "$PMCAUS_backups"

# Get latest build number
echo "Seaching for PaperMC Build Info"
LATEST_BUILD=$(curl -s "https://api.papermc.io/v2/projects/paper/versions/${MINECRAFT_VERSION}" | grep -o '"builds":\[[0-9,]*\]' | grep -o '[0-9]*' | tail -1)

if [ -z "$LATEST_BUILD" ]; then
    echo -e "${RED}Error: Could not fetch latest build number. Check your Minecraft version. (Error code 2)${NC}"
    exit 1
fi

echo -e "Latest build: ${GREEN}${LATEST_BUILD}${NC}"

# Check if server is running
if pgrep -f "$JAR_NAME" > /dev/null; then
    echo -e "${YELLOW}Server is running. Stopping server. ${NC}"
    
    sudo systemctl stop minecraft

    
    pkill -f "$JAR_NAME"
    
    # Wait for server to stop to execute code
    echo "Waiting for server to stop..."
    sleep 10
    SERVER_WAS_RUNNING=true
else
    echo -e "${GREEN}Server is not running. ${NC}"
    SERVER_WAS_RUNNING=false
fi

# Backup current jar
if [ -f "$SERVER_DIR/$JAR_NAME" ]; then
    BACKUP_NAME="paper-backup-$(date +%Y%m%d-%H%M%S).jar"
    echo "Backing up current jar to $BACKUP_DIR/$BACKUP_NAME"
    cp "$SERVER_DIR/$JAR_NAME" "$BACKUP_DIR/$BACKUP_NAME"
fi

# Download new version
echo "Downloading latest paper build: ${LATEST_BUILD}..."
DOWNLOAD_URL="https://api.papermc.io/v2/projects/paper/versions/${MINECRAFT_VERSION}/builds/${LATEST_BUILD}/downloads/paper-${MINECRAFT_VERSION}-${LATEST_BUILD}.jar"

curl -o "$SERVER_DIR/$JAR_NAME" "$DOWNLOAD_URL"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}Download successful!${NC}"
else
    echo -e "${RED}Error! Download failed!${NC}"
    
    # Restore backup if download failed
    if [ -f "$BACKUP_DIR/$BACKUP_NAME" ]; then
        echo "Restoring most recent backup..."
        cp "$BACKUP_DIR/$BACKUP_NAME" "$SERVER_DIR/$JAR_NAME"
    fi
    exit 1
fi

# Clean old backups (keep last 5)
echo "Cleaning old backups..."
cd "$BACKUP_DIR"
ls -t paper-backup-*.jar | tail -n +6 | xargs -r rm

# Restart server if it was running
if [ "$SERVER_WAS_RUNNING" = true ]; then
    echo -e "${YELLOW}Starting server...${NC}"
    
    
    sudo systemctl start minecraft

    
    cd "$SERVER_DIR"

    
    echo -e "${YELLOW}Note: Server start command is commented out. Uncomment and adjust for your setup.${NC}"
fi

echo -e "${GREEN}=== Update Complete! Star the github if you enjoyed using this program. ===${NC}"
echo "Updated to Paper build ${LATEST_BUILD} Enjoy using PaperMC!"